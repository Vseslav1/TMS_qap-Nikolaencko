# Работа с переменными:
# 1 Переменной var_int присвойте значение 10, var_float - значение 8.4, var_str - "No".
import name1

var_int = 10
var_float = 8.4
var_str = 'No'

# 2 Измените значение, хранимое в переменной var_int, увеличив его в 3.5 раза,
# результат свяжите с переменной big_int.

big_int = var_int * 3.5

# 3 Измените значение, хранимое в переменной var_float, уменьшив его на единицу,
# результат свяжите с той же переменной.

var_float = var_float - 1

# 4 Разделите var_int на var_float, а затем big_int на var_float. Результат данных
# выражений не привязывайте ни к каким переменным.

result1 = var_int/var_float
result2 = big_int/var_float

# 5 Измените значение переменной var_str на "NoNoYesYesYes". При формировании
# нового значения используйте операции конкатенации (+) и повторения строки (*).

var_str = var_str * 2 + 'Yes' * 3


# 6 Выведите значения всех переменных.

print(var_int, big_int, var_float, result1, result2, var_str, sep='\n')


# Строки:
# 1 Свяжите переменную с любой строкой, состоящей не менее чем из 8 символов.
# Извлеките из строки первый символ, затем последний, третий с начала и третий с
# конца. Измерьте длину вашей строки.

a = 'hello world'

b = a[0]
c = a[-1]
d = a[2]
f = a[-3]
e = len(a)
print(a, b, c, d, f, e, sep='\n')

# 2 Присвойте произвольную строку длиной 10-15 символов переменной и извлеките из
# нее следующие срезы:

str2 = 'Happy new year'

# первые восемь символов

str3 = str2[0:8]

# четыре символа из центра строки

str4 = len(str2) // 2
str4 = str2[str4 - 2: str4 + 2]

# символы с индексами кратными трем

str5 = str2[::3]

# переверните строку

str6 = str2[::-1]

# 3 Есть строка: “my name is name”. Напечатайте ее, но вместо 2ого “name” вставьте

str7 = 'my name is name'
namemy = 'vseslav'
str8 = str7.replace('name', namemy, 1)
print(str8)

# 4 Есть строка: test_tring = "Hello world!", необходимо

test_tring = "Hello world!"

# напечатать на каком месте находится буква w

plase = test_tring.find('w')

# кол-во букв l

kol = test_tring.count('l')
print(kol)

# Проверить начинается ли строка с подстроки: “Hello”

start = test_tring.startswith('hello')

# Проверить заканчивается ли строка подстрокой: “qwe”

end = test_tring.endswith('qwe')



# Списки:
# 1 Создайте два любых списка и свяжите их с переменными.

list1 = [1, 2, 3, 4, 5]
list2 = [11, 12, 13, 14, 15]

# 2 Извлеките из первого списка второй элемент.

b1 = list1[1]

# 3 Измените во втором списке последний элемент. Выведите список на экран.

list2[-1] = 22
print(list2)

# 4 Соедините оба списка в один, присвоив результат новой переменной. Выведите
# получившийся список на экран.

list3 = list1 + list2
print(list3)

# 5 "Снимите" срез из соединенного списка так, чтобы туда попали некоторые части
# обоих первых списков. Срез свяжите с очередной новой переменной. Выведите
# значение этой переменной.

list4 = list3[4:7]
print(list4)

# 6 Добавьте в список два новых элемента и снова выведите его.

list4.insert(0 ,'stroka')
list4.append(22)
print(list4)


# 7 Даны списки:
# a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89];
# b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13].



# Нужно вернуть список, который состоит из элементов, общих для этих двух
# списков. -- !не использовать циклы

a2 = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89];
b2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]

d3 = list(set(a2) & set(b2))
print(d3)

# 8 Есть список: [1, 2, 3, 4, 3, 2, 5, 1, 4, 6, 7, 1, 8, 2, 3] оставить в нем только уникальные
# значения. !не использовать циклы

sposok1= [1, 2, 3, 4, 3, 2, 5, 1, 4, 6, 7, 1, 8, 2, 3]
spisokunik = list(set(sposok1))
print(spisokunik)

def summ_num(a ,b) -> int:
    """
     Return sum of 2 numbers
    :param a: first number
    :param b: second numder
    :return: sum of two numbers
    """
    return a + b


print(summ_num(a=12,b=13))